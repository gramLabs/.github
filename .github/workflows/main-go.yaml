name: Main

on:
  workflow_call:
    inputs:
      go-version:
        description: 'The Go version to download (if necessary) and use. Supports semver spec and ranges.'
        default: '~1.17'
        required: false
        type: string
      fetch-depth:
        description: 'The fetch depth for checking out code. Must be 0 for GoReleaser to recognize tags.'
        default: 1
        required: false
        type: number
      upload-artifacts:
        description: 'If true, preserve build artifacts on the job.'
        default: false
        required: false
        type: boolean
      cluster:
        description: 'The development cluster to target.'
        default: 'dev-1'
        required: false
        type: string
    secrets:
      gh-token:
        description: 'PAT used for triggering workflows and pulling Go modules.'
        required: true
      registry-username:
        description: 'Username for the StormForge registry'
        required: false
      registry-password:
        description: 'Password for the StormForge registry'
        required: false

jobs:

  # Builds and pushes images to GHCR.
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: ${{ inputs.fetch-depth }}

    - name: Set up Go
      uses: gramLabs/.github/.github/actions/setup-go@main
      with:
        go-version: '${{ inputs.go-version}}'
        gh-token: '${{ secrets.gh-token }}'

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        install: true

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: '${{ github.actor }}'
        password: '${{ github.token }}'

    - name: Login to StormForge Registry
      uses: docker/login-action@v2
      # Hack for testing secret with 'if'
      env:
        REGISTRY_USERNAME: '${{ secrets.registry-username }}'
      if: "${{ env.REGISTRY_USERNAME != '' }}"
      with:
        registry: registry.stormforge.io
        username: '${{ secrets.registry-username }}'
        password: '${{ secrets.registry-password }}'

    - name: Run GoReleaser
      uses: goreleaser/goreleaser-action@v3
      env:
        GITHUB_TOKEN: '${{ github.token }}'
      with:
        version: latest
        args: release

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      if: '${{ inputs.upload-artifacts}}'
      with:
        name: dist-archives
        path: |
          dist/*_checksums.txt
          dist/*.tar.gz
          dist/*.zip

    - name: Deploy image
      env:
        GH_TOKEN: '${{ secrets.gh-token }}'
        GH_REPO: gramLabs/stormforge-app
      run: |
        gh workflow run promote_image_to_dev.yaml \
          --ref main \
          -f image="ghcr.io/${{ github.repository }}:sha-$(git rev-parse --short HEAD)" \
          -f cluster="${{ inputs.cluster }}"


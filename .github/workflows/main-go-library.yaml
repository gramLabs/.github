# main-go-library.yaml
#
# This is the primary shared workflow for building and deploying code on the main branch
# of a "library" project (i.e. one that is periodically released with no distribution).
#
# To use this project, you must add a 'goreleaser.yaml' file to the root of repository.
# GoReleaser must be configured to skip builds, e.g.:
#
#    before:
#      hooks: ["go mod tidy", "go generate ./..."]
#    builds:
#    - skip: true
#    snapshot:
#      name_template: '{{trimprefix .Summary "v"}}'
#    release:
#      draft: true
#      prerelease: auto
#
name: Main

on:
  workflow_call:
    secrets:
      gh-token:
        description: 'GitHub token used for creating releases and pulling Go modules.'
        required: true
    outputs:
      artifacts:
        description: Build result artifacts.
        value: ${{ jobs.deploy.outputs.artifacts }}
      metadata:
        description: Build result metadata.
        value: ${{ jobs.deploy.outputs.metadata }}

jobs:

  # Builds and verifies.
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    outputs:
      artifacts: ${{ steps.goreleaser.outputs.artifacts }}
      metadata: ${{ steps.goreleaser.outputs.metadata }}
    steps:

    - name: Checkout
      uses: actions/checkout@v3
      with:
        # We need full history for GoReleaser
        fetch-depth: 0

    - name: Set up Go
      uses: gramLabs/.github/.github/actions/setup-go@main
      with:
        gh-token: ${{ secrets.gh-token }}

    - name: Run GoReleaser
      id: goreleaser
      uses: goreleaser/goreleaser-action@v3
      env:
        GITHUB_TOKEN: ${{ secrets.gh-token }}
      with:
        version: latest
        args: release --release-notes ./.github/RELEASE_TEMPLATE.md

name: Pull Request

on:
  workflow_call:
    inputs:
      short-tests:
        description: 'Only run short tests.'
        default: true
        required: false
        type: boolean
    secrets:
      gh-token:
        description: 'PAT used for pulling Go modules.'
        required: false

jobs:

  # Runs the linter with a minimal set of default rules.
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Go
      uses: gramLabs/.github/.github/actions/setup-go@main
      with:
        gh-token: '${{ secrets.gh-token }}'

    - name: Configure Linter
      run: |
        cat << EOF > "${{ runner.temp }}/.golangci.yaml"
        version: "2"
        linters:
          default: none
          enable:
          - staticcheck
          settings:
            staticcheck:
              checks:
              - ST*
              - -ST1000
              - -ST1020
              - -ST1021
              - -ST1022
        formatters:
          enable:
          - gofmt
          - goimports
        run:
          timeout: 10m
        EOF

    - name: Lint
      uses: golangci/golangci-lint-action@v8
      with:
        args: '--config="${{ runner.temp }}/.golangci.yaml"'

  # Runs the build to ensure nothing is overtly broken.
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Go
      uses: gramLabs/.github/.github/actions/setup-go@main
      with:
        gh-token: '${{ secrets.gh-token }}'

    - name: Run GoReleaser
      uses: goreleaser/goreleaser-action@v6
      if: hashFiles('.goreleaser.yml', '.goreleaser.yaml', 'goreleaser.yml', 'goreleaser.yaml') != ''
      with:
        args: build --single-target --snapshot

    - name: Run Go build
      if: hashFiles('.goreleaser.yml', '.goreleaser.yaml', 'goreleaser.yml', 'goreleaser.yaml') == ''
      run: |
        go mod tidy
        go generate ./...
        go build ./...

  # Runs the Go tests, callers may define additional jobs for more in-depth
  # acceptance testing on pull requests if necessary.
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Go
      uses: gramLabs/.github/.github/actions/setup-go@main
      with:
        gh-token: '${{ secrets.gh-token }}'

    - name: Run Short Tests
      if: 'inputs.short-tests'
      run: 'go test -short ./...'

    - name: Run Tests
      if: '!inputs.short-tests'
      run: 'go test ./...'

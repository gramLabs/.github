name: Deploy Helm Chart
description: Builds and pushes a Helm chart to GHCR.
inputs:
  gh-token:
    description: PAT used for triggering workflows.
    required: true
  registry:
    description: Registry to push the Helm chart to.
    required: true
    default: ghcr.io/${{ github.repository_owner }}
  chart:
    description: Name of the chart to build and push.
    required: true
  version:
    description: Version of the chart to build.
    required: false
    default: ''
  app-version:
    description: Application version to include in the chart.
    required: false
    default: ''

runs:
  using: "composite"
  steps:

  - uses: docker/login-action@v3
    with:
      registry: ghcr.io
      username: ${{ github.actor }}
      password: ${{ github.token }}

  - shell: bash
    id: helm-chart
    env:
      REGISTRY: ${{ inputs.registry }}
      CHART: ${{ inputs.chart }}
      VERSION: ${{ inputs.version }}
      APP_VERSION: ${{ inputs.app-version }}
    run: |
      REGISTRY=${REGISTRY,,}
      if [ -z "${VERSION}" ] ; then
        VERSION=$(helm show chart "./charts/${CHART}" | grep '^version:' | awk '{print $NF}')
      fi
      
      helm package "./charts/${CHART}" --version "${VERSION}" --app-version "${APP_VERSION}" --destination "./dist"
      helm push "./dist/${CHART}-${VERSION}.tgz" "oci://${REGISTRY}"
      echo "image=${REGISTRY}/${CHART}:${VERSION}" >> $GITHUB_OUTPUT

  - shell: bash
    env:
      GH_REPO: gramLabs/stormforge-app
      GH_TOKEN: ${{ inputs.gh-token }}
    run: |
      gh workflow run promote_image.yaml -f image="${{ steps.helm-chart.outputs.image }}"

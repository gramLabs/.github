name: 'Setup Go'
description: 'Configures Go and sets up Git/SSH for private module access.'
inputs:
  go-version:
    description: 'The Go version to download (if necessary) and use. Supports semver spec and ranges.'
    default: '~1.17'
    required: false
  gh-token:
    description: 'PAT used for pulling Go modules.'
    default: ''
    required: false

runs:
  using: "composite"
  steps:

  - uses: actions/setup-go@v3
    with:
      go-version: '${{ inputs.go-version }}'

  - id: go-env
    shell: bash
    env:
      ACCESS_TOKEN: '${{ inputs.gh-token }}'
    run: |
      if [ -n "${ACCESS_TOKEN}" ]; then
        git config --global http.https://github.com/gramLabs/.extraheader \
            "AUTHORIZATION: basic $(echo -n "x-access-token:${ACCESS_TOKEN}" | base64 -w 0)"
      fi
      go env -w "GOPRIVATE=github.com/${{ github.repository_owner }}"
      echo "::set-output name=go-cache::$(go env GOCACHE)"
      echo "::set-output name=go-mod-cache::$(go env GOMODCACHE)"

  - uses: actions/cache@v3
    with:
      path: |
        ${{ steps.go-env.outputs.go-cache }}
        ${{ steps.go-env.outputs.go-mod-cache }}
      key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
      restore-keys: |
        ${{ runner.os }}-go-
